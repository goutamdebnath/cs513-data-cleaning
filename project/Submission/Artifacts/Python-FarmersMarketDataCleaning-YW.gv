digraph Workflow {
rankdir=TB
fontname=Courier; fontsize=18; labelloc=t
label="PYTHON-DATA-CLEANING-PROCESS"
subgraph cluster_workflow_box_outer { label=""; color=black; penwidth=2
subgraph cluster_workflow_box_inner { label=""; color=white
node[shape=box style=filled fillcolor="#CCFFCC" peripheries=1 fontname=Courier]
TransformToPandasDF
FindInvalidZipCode
FindInvalidCity
FindInvalidState
FindInvalidCounty
"Iterate:Missing_Zip"
"Iterate:Missing_City"
"Iterate:Missing_State"
"Iterate:Missing_County"
"getGISByCoordinates(Zip)"
"getGISByCoordinates(City)"
"getGISByCoordinates(State)"
"getGISByCoordinates(County)"
UpdatedZip
UpdatedCity
UpdatedState
UpdatedCounty
JoinResults
"PHASE2-CLEANING"
"PHASE2:FindInvalidZip"
"PHASE2:Iterate:Missing_Zip"
"PHASE2:getZipCodeByCity"
"PHASE2:FindInvalidCounty"
"PHASE2:Iterate:Missing_County"
"PHASE2:getCountyByZipCode"
"RemoveBlankLatitude/Longitude"
"Rename_x&y_To_Longitude&Latutude"
ConvertDataframeToCSV
node[shape=box style="rounded,filled" fillcolor="#FFFFCC" peripheries=1 fontname=Helvetica]
Clean_Farmers_Market_Data [shape=record rankdir=LR label="{<f0> Clean_Farmers_Market_Data |<f1> file\:\{filepath\}\farmersmarkets_clean_openrefine_python.csv}"];
farmers_market_missing_zip_city [shape=record rankdir=LR label="{<f0> farmers_market_missing_zip_city |<f1> file\:\{filepath\}\farmersmarkets_clean_openrefine.csv}"];
PANDAS_DATAFRAME
INVALID_ZIPCODE_RECORDS
INVALID_CITY_RECORDS
INVALID_STATE_RECORDS
INVALID_COUNTY_RECORDS
COMBINED_DATASET
"PHASE2:INVALID_ZIP_RECORDS"
"PHASE2:UpdateMissingZip"
"PHASE2:INVALID_COUNTY_RECORDS"
"PHASE2:UpdateMissingCounty"
CLEAN_DATASET
node[shape=box style="rounded,filled" fillcolor="#FCFCFC" peripheries=1 fontname=Helvetica]
TransformToPandasDF -> PANDAS_DATAFRAME
farmers_market_missing_zip_city -> TransformToPandasDF
FindInvalidZipCode -> INVALID_ZIPCODE_RECORDS
PANDAS_DATAFRAME -> FindInvalidZipCode
FindInvalidCity -> INVALID_CITY_RECORDS
PANDAS_DATAFRAME -> FindInvalidCity
FindInvalidState -> INVALID_STATE_RECORDS
PANDAS_DATAFRAME -> FindInvalidState
FindInvalidCounty -> INVALID_COUNTY_RECORDS
PANDAS_DATAFRAME -> FindInvalidCounty
"Iterate:Missing_Zip" -> "getGISByCoordinates(Zip)"
INVALID_ZIPCODE_RECORDS -> "Iterate:Missing_Zip"
"Iterate:Missing_City" -> "getGISByCoordinates(City)"
INVALID_CITY_RECORDS -> "Iterate:Missing_City"
"Iterate:Missing_State" -> "getGISByCoordinates(State)"
INVALID_STATE_RECORDS -> "Iterate:Missing_State"
"Iterate:Missing_County" -> "getGISByCoordinates(County)"
INVALID_COUNTY_RECORDS -> "Iterate:Missing_County"
Latitude -> "getGISByCoordinates(Zip)"
Longitude -> "getGISByCoordinates(Zip)"
Latitude -> "getGISByCoordinates(City)"
Longitude -> "getGISByCoordinates(City)"
Latitude -> "getGISByCoordinates(State)"
Longitude -> "getGISByCoordinates(State)"
Latitude -> "getGISByCoordinates(County)"
Longitude -> "getGISByCoordinates(County)"
"getGISByCoordinates(Zip)" -> UpdatedZip
"getGISByCoordinates(City)" -> UpdatedCity
"getGISByCoordinates(State)" -> UpdatedState
"getGISByCoordinates(County)" -> UpdatedCounty
JoinResults -> COMBINED_DATASET
UpdatedZip -> JoinResults
UpdatedCity -> JoinResults
UpdatedState -> JoinResults
UpdatedCounty -> JoinResults
COMBINED_DATASET -> "PHASE2-CLEANING"
"PHASE2:FindInvalidZip" -> "PHASE2:INVALID_ZIP_RECORDS"
"PHASE2-CLEANING" -> "PHASE2:FindInvalidZip"
"PHASE2:INVALID_ZIP_RECORDS" -> "PHASE2:Iterate:Missing_Zip"
"PHASE2:getZipCodeByCity" -> "PHASE2:UpdateMissingZip"
CITY -> "PHASE2:getZipCodeByCity"
"PHASE2:Iterate:Missing_Zip" -> "PHASE2:getZipCodeByCity"
"PHASE2:FindInvalidCounty" -> "PHASE2:INVALID_COUNTY_RECORDS"
"PHASE2:UpdateMissingZip" -> "PHASE2:FindInvalidCounty"
"PHASE2:INVALID_COUNTY_RECORDS" -> "PHASE2:Iterate:Missing_County"
"PHASE2:getCountyByZipCode" -> "PHASE2:UpdateMissingCounty"
"PHASE2:Iterate:Missing_County" -> "PHASE2:getCountyByZipCode"
Zip -> "PHASE2:getCountyByZipCode"
"PHASE2:UpdateMissingCounty" -> "RemoveBlankLatitude/Longitude"
"Rename_x&y_To_Longitude&Latutude" -> CLEAN_DATASET
"RemoveBlankLatitude/Longitude" -> "Rename_x&y_To_Longitude&Latutude"
ConvertDataframeToCSV -> Clean_Farmers_Market_Data
CLEAN_DATASET -> ConvertDataframeToCSV
}}
subgraph cluster_input_ports_group_outer { label=""; color=white
subgraph cluster_input_ports_group_inner { label=""; color=white
node[shape=circle style="rounded,filled" fillcolor="#FFFFFF" peripheries=1 fontname=Helvetica width=0.2]
farmers_market_missing_zip_city_input_port [label=""]
}}
subgraph cluster_output_ports_group_outer { label=""; color=white
subgraph cluster_output_ports_group_inner { label=""; color=white
node[shape=circle style="rounded,filled" fillcolor="#FFFFFF" peripheries=1 fontname=Helvetica width=0.2]
Clean_Farmers_Market_Data_output_port [label=""]
}}
farmers_market_missing_zip_city_input_port -> farmers_market_missing_zip_city
Clean_Farmers_Market_Data -> Clean_Farmers_Market_Data_output_port
}
